# ====================================================================
# Config for visualizing filters on the ISBI dataset
# ====================================================================

# --- 1. Источники данных ---
# DEV: Указываем пути к файлам. Пути должны быть относительны
# корневой папки `ml_pipeline`, откуда мы будем запускать скрипт.
input_data:
  # Путь к "каноническому" изображению, которое мы хотим проанализировать.
  image_source: "../prepared_data/isbi2012_v1_raw/images/train/isbi2012_v1_raw_s005_s005.tif"

  # (Опционально) Путь к ground truth маске для сравнения.
  gt_mask_source: "../prepared_data/isbi2012_v1_raw/masks/train/isbi2012_v1_raw_s005_s005.png"

  # (Опционально) Путь к предсказанной моделью маске для отладки ошибок.
  pred_mask_source: null # Пример: "../mlruns/1/<run_id>/artifacts/predictions/isbi_s005_pred.png"

# --- 2. Фильтры для визуализации ---
# DEV: Это сердце утилиты. Это список, где каждый элемент - фильтр.
# Если у параметра указан список значений, утилита создаст отдельную
# картинку для каждого значения (эффект "гридсерча").
filters_to_visualize:
  # Пример 1: Простой фильтр без настраиваемых параметров.
  - name: scharr

  # Пример 2: Фильтр с одним фиксированным параметром.
  - name: clahe
    params:
      clip_limit: 2.0
      tile_grid_size: 8

  # Пример 3: "Гридсерч" по параметру `sigma` для фильтра LoG.
  # Будет создано 3 отдельных панели для LoG.
  - name: log_sigma
    params:
      sigma: [1.5, 3.0, 4.5]

  # # Пример 4: "Гридсерч" по параметру `theta_deg` (ориентация) для Gabor.
  # # Будет создано 4 панели для Gabor, чтобы увидеть реакцию на разные углы.
  # - name: gabor
  #   params:
  #     theta_deg: [0, 45, 90, 135]
  #     ksize: 31 # Размер ядра Габора

# --- 3. Настройки вывода и стиля ---
output:
  # Куда сохранять итоговую картинку. Если `null`, то не сохраняем.
  save_dir: "./visualizations/isbi_exploration"
  # Показывать ли график в интерактивном режиме (идеально для Colab/Jupyter).
  show_interactive: true

  style:
    # Размер (в дюймах) для ОДНОЙ панели. Общий размер будет вычислен автоматически.
    figsize_per_panel: [6, 6]
    # DPI (качество) сохраняемого изображения.
    dpi: 200
    # Цветовая карта Matplotlib для отображения результатов фильтров.
    # "viridis", "inferno", "magma", "gray" - хорошие варианты.
    colormap: "inferno"
    # Размер шрифта для заголовков панелей.
    title_fontsize: 14
    # Жестко задать количество колонок в сетке. Если `null`, вычисляется автоматически.
    cols: 4